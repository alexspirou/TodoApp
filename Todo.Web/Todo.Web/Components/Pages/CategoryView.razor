@using System.Text.Json
@using Todo.Shared.ExtensionMethods
@using Todo.Shared.Responses
@using Todo.Web.Common
@using Todo.Web.Services.Interfaces
@using Todo.Web.State

@inject ITodoMangerService TodoEntriesService
@inject AppState AppState
@inject NavigationManager NavigationManager 

@page "/category/{CategoryName}/{CategoryId}"

@if (Category is not null)
{
    <PageTitle>@Category.Name </PageTitle>

    <CategoryComponent Category="Category" OnDeleteCategoryClicked="OnCategoryDeleteEventHandler" />
}
else
{
    <h1>Empty</h1>
}


@code
{
    [Parameter] public string CategoryName { get; set; } = null!;
    [Parameter] public string CategoryId { get; set; } = null!;
    [Parameter] public CategoryResponseDto? Category { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Category = await TodoEntriesService.GetCategoryByIdAsync(CategoryId.ToGuid());
    }

    private void OnCategoryDeleteEventHandler()
    {
        Category = null;
        StateHasChanged();
        NavigationManager.NavigateTo(NavigationRoutes.MyCategories);
    }


}
